#!/usr/bin/env bash
function isCompatible() {
    test -f "pom.xml"
}

function install() {
    test -f create_mvn_local_repo.sh && ./create_mvn_local_repo.sh || return 1
    mvn package
}

function copyToBin() {
    . "$SCRIPT_LIB/copyToBin" "$(_getJar)" "${PROJECT_NAME}.jar"
}

function createLauncher {
    local bin="${SCRIPT_LIB}/bin/${PROJECT_NAME}.jar"
    local launcher="${SCRIPT_LIB}/modules/install_modules/launchers/java"

    _sedeasy "__JAR_FILE__" "$bin" "$launcher" > "$SCRIPT_LAUNCHER/${PROJECT_NAME,,}"
    chmod +x "$SCRIPT_LAUNCHER/$PROJECT_NAME"
}

function _sedeasy {
    sed "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
}

function _getJar() {
    jars=(`ls target/*with-dependencies.jar`) || error "No .jar found in project"

    if [ "${#jars[@]}" -eq 1 ]; then
        realpath "${jars[@]}"
    else
        jars=(`ls target/*.jar`) || error "No .jar found in project"
        if [ "${#jars[@]}" -eq 1 ]; then
            realpath "${jars[@]}"
        elif [ "${#jars[@]}" -eq 0 ]; then
            error "No .jar found in project"
        else
            error "Too many .jar files found in project"
        fi
    fi
}

cmd="$1"
shift
$cmd "$@"
