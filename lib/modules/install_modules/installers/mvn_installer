#!/usr/bin/env bash
function isCompatible() {
    test -f "pom.xml"
}

function install() {
    local bin
    local jar

    bin="${SCRIPT_LIB}/bin/${PROJECT_NAME}.jar"
    jar="$(_getJar)"

    if [ $? -eq 0 ] && [ -f "$bin" ] && [ -f "$jar" ]; then
        if [ "$(md5sum "$bin" | cut -d ' ' -f 1)" == "$(md5sum "$jar" | cut -d ' ' -f 1)" ]; then
            return 0
        fi
    fi

    mvn package
}

function copyToBin() {
    local jar="$(_getJar)" || return 1
    . "$SCRIPT_LIB/copyToBin" "$jar" "${PROJECT_NAME}.jar"
}

function createLauncher {
    local bin="${SCRIPT_LIB}/bin/${PROJECT_NAME}.jar"
    local launcher="${SCRIPT_LIB}/modules/install_modules/launchers/java"

    _sedeasy "__JAR_FILE__" "$bin" "$launcher" > "$SCRIPT_LAUNCHER/${PROJECT_NAME,,}"
    chmod +x "$SCRIPT_LAUNCHER/${PROJECT_NAME,,}"
}

function _sedeasy {
    sed "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
}

function _getJar() {
    jars=(`ls target/*with-dependencies.jar`) || return 1

    if [ "${#jars[@]}" -eq 1 ]; then
        realpath "${jars[@]}"
    else
        jars=(`ls target/*.jar`) || return 1
        if [ "${#jars[@]}" -eq 1 ]; then
            realpath "${jars}"
        elif [ "${#jars[@]}" -eq 0 ]; then
            return 1
        else
            return 1
        fi
    fi
}

cmd="$1"
shift
$cmd "$@"
